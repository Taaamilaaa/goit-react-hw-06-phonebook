{"version":3,"sources":["components/Filter/filter.module.css","components/ContactList/contactList.module.css","redux/contacts/actions.js","redux/contacts/contacts-selectors.js","components/Form/Form.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","redux/contacts/reducers.js","redux/store.js","index.js","components/Form/form.module.css","components/ContactItem/contactItem.module.css"],"names":["module","exports","addContact","createAction","deleteContact","filterContact","getContactsList","state","contacts","getFilter","filter","Form","contactList","useSelector","dispatch","useDispatch","nameInputId","uuid","numberInputId","useState","name","setName","number","setNumber","className","styles","form","onSubmit","e","preventDefault","newContact","id","find","toLowerCase","alert","label","htmlFor","input","type","value","pattern","title","required","onChange","target","submitBtn","ContactItem","arrOfContacts","contact","includes","map","contactItem","btn","onClick","propType","PropTypes","obj","clickOnBtn","func","ContactList","list","prototype","Filter","currentTarget","string","App","length","contactsListReducer","createReducer","payload","filterReducer","_","combineReducers","persistConfig","key","version","storage","blacklist","rootReducer","persistedContactsReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.dbae7f94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filter_label__1WhiM\",\"input\":\"filter_input__3yqDl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactList_list__zoHMf\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction(\"contact/add\");\r\nexport const deleteContact = createAction(\"contact/delete\");\r\nexport const filterContact = createAction(\"contactList/filter\");\r\n\r\n\r\n// export const addContact = (contact) => {\r\n//     return {\r\n//         type: \"contact/add\",\r\n//         payload: contact,\r\n//     }\r\n// };\r\n// export const deleteContact = (id) => {\r\n//     return {\r\n//         type: \"contact/delete\",\r\n//         payload: { id },\r\n//     }\r\n// };\r\n\r\n// export const filterContact = (value) => {\r\n//     return {\r\n//         type: \"contactList/filter\",\r\n//         payload: value,\r\n//     }\r\n// };\r\n\r\n","export const getContactsList = state => state.contacts;\r\nexport const getFilter = state => state.filter;","import { useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport styles from \"./form.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addContact } from \"../../redux/contacts/actions\";\r\nimport { getContactsList } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst Form = () => {\r\n  const contactList = useSelector(getContactsList);\r\n  const dispatch = useDispatch();\r\n\r\n  const nameInputId = uuid();\r\n  const numberInputId = uuid();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChangeName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleChangeNumber = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newContact = {\r\n      id: uuid(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    const renderedNames = contactList.find(\r\n      ({name}) => name.toLowerCase() === newContact.name.toLowerCase()\r\n    );\r\n    if (renderedNames) {\r\n      alert(`${newContact.name} is already on contacts`);\r\n      setName(\"\");\r\n      setNumber(\"\");\r\n      return;\r\n    };\r\n    dispatch(addContact(newContact));    \r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <label className={styles.label} htmlFor={nameInputId}>\r\n        Name\r\n      </label>\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        id={nameInputId}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"\"\r\n        required\r\n        onChange={handleChangeName}\r\n      />\r\n      <label className={styles.label} htmlFor={numberInputId}>\r\n        Number\r\n      </label>\r\n      <input\r\n        className={styles.input}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        value={number}\r\n        id={numberInputId}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"\"\r\n        required\r\n        onChange={handleChangeNumber}\r\n      />\r\n      <button className={styles.submitBtn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport styles from \"./contactItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteContact } from \"../../redux/contacts/actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getContactsList } from \"../../redux/contacts/contacts-selectors\";\r\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst ContactItem = () => {\r\n   const dispatch = useDispatch();\r\n\r\n  const getVisibleContact = (arrOfContacts, filter) => {\r\n    return arrOfContacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const visibleContacts = getVisibleContact(\r\n    useSelector(getContactsList),\r\n    useSelector(getFilter)\r\n  );\r\n\r\n  return visibleContacts.map(({ id, name, number }) => {  \r\n    return (\r\n      <li className={styles.contactItem} key={id}>\r\n        <span id=\"name\" className={styles.name}>\r\n          {name}:\r\n        </span>\r\n        <span className={styles.number}>{number}</span>\r\n        <button\r\n          className={styles.btn}\r\n          onClick={() => dispatch(deleteContact(id))}\r\n        >\r\n          ❌\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n};\r\n\r\nContactItem.propType = {\r\n  contacts: PropTypes.obj,\r\n  clickOnBtn: PropTypes.func,\r\n};\r\nexport default ContactItem;\r\n","import ContactItem from \"../ContactItem/ContactItem\";\r\nimport styles from \"./contactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nconst ContactList = () => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      <ContactItem />\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.prototype = {\r\n  contacts: PropTypes.obj,\r\n  clickOnBtn: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import styles from \"./filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { filterContact } from \"../../redux/contacts/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <label className={styles.label}>Find contacts by name</label>\r\n      <input\r\n        className={styles.input}\r\n        onChange={(e) => dispatch(filterContact(e.currentTarget.value))}\r\n      />\r\n    </>\r\n  );\r\n};\r\nFilter.propType = {\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n};\r\n\r\nexport default Filter;\r\n","import \"./App.css\";\nimport Form from \"../Form/Form\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\nimport { useSelector } from \"react-redux\";\nimport { getContactsList } from \"../../redux/contacts/contacts-selectors\";\n\nconst App = () => {\n  const contactList = useSelector(getContactsList);\n\n  return (\n    <div className=\"phonebook\">\n      <h2 className=\"title\">Phonebook</h2>\n      <Form />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      {contactList.length > 0 ? (\n        <ContactList />\n      ) : (\n        <p className=\"notification\">Please add your contacts.</p>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from \"redux\";\r\nimport { addContact, deleteContact, filterContact } from \"./actions\";\r\n\r\nconst initialState = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nexport const contactsListReducer = createReducer(initialState, {\r\n  [addContact]: (state, {payload}) => [...state, payload],\r\n  [deleteContact]: (state, {payload}) => state.filter(({id}) => id !== payload),\r\n});\r\n\r\nexport const filterReducer = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contactsListReducer,  \r\n    filterReducer,//   \r\n  \r\n});\r\n\r\n////////////////////////////Redux\r\n// export const contactsListReducer = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case \"contact/add\":\r\n//       return [...state, action.payload];\r\n//     case \"contact/delete\":\r\n//       return state.filter((contact) => contact.id !== action.payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export const filterReducer = (state = \"\", action) => {\r\n//   switch (action.type) {\r\n//     case \"contactList/filter\":\r\n//       return action.payload;   \r\n//     default:      \r\n//   return state;\r\n//   }\r\n    \r\n// }\r\n\r\n// export const rootReducer = combineReducers({\r\n//   contacts: contactsListReducer,\r\n//   filter: filterReducer,\r\n  \r\n// });","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport { contactsListReducer, filterReducer } from \"./contacts/reducers\";\r\n\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nconst persistConfig = {\r\n  key: \"contacts\",\r\n  version: 1,\r\n  storage,\r\n  blacklist: [\"filter\", \"filteredCont\"],\r\n};\r\nexport const rootReducer = combineReducers({\r\n  contacts: contactsListReducer,\r\n  filter: filterReducer,\r\n  \r\n});\r\nconst persistedContactsReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedContactsReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n//////////////////Redux\r\n\r\n// import { createStore } from \"redux\";\r\n// import { rootReducer } from \"./contacts/reducers\";\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n// export default store;\r\n/////////////////\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport { Provider } from \"react-redux\";\n// import store from \"./redux/store\"   ///Redux\nimport { PersistGate } from \"redux-persist/integration/react\"; \nimport { store, persistor } from \"./redux/store\";  ///reduxToolkit\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate loading={null} persistor={persistor}>  \n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"form_label__1FrRI\",\"input\":\"form_input__1I0dx\",\"form\":\"form_form__2fzAu\",\"submitBtn\":\"form_submitBtn__3UmYP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"contactItem_contactItem__1K3E-\",\"name\":\"contactItem_name__tEXSP\",\"number\":\"contactItem_number__19RhP\",\"btn\":\"contactItem_btn__1odCe\"};"],"sourceRoot":""}