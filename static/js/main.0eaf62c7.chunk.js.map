{"version":3,"sources":["components/Filter/filter.module.css","components/ContactList/contactList.module.css","redux/contacts/actions.js","components/Form/Form.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","redux/contacts/reducers.js","redux/store.js","index.js","components/ContactItem/contactItem.module.css","components/Form/form.module.css"],"names":["module","exports","filteredContacts","arrCont","type","payload","connect","state","contactList","contacts","dispatch","onAdd","contact","addContact","nameInputId","uuid","numberInputId","useState","name","setName","number","setNumber","className","styles","form","onSubmit","e","preventDefault","newContact","id","find","toLowerCase","alert","label","htmlFor","input","value","pattern","title","required","onChange","target","submitBtn","ContactItem","onDel","filter","filteredCont","map","contactItem","btn","onClick","propType","PropTypes","obj","clickOnBtn","func","onFilteredCont","ContactList","list","prototype","Filter","onFilter","useEffect","length","includes","currentTarget","string","filterContact","arr","initialState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0eaf62c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filter_label__1WhiM\",\"input\":\"filter_input__3yqDl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactList_list__zoHMf\"};","// import { createAction } from '@reduxjs/toolkit';\r\n\r\n// export const addContact = createAction(\"contact/add\");\r\n// export const deleteContact = createAction(\"contact/delete\");\r\n// export const filterContact = createAction(\"contactList/filter\");\r\n// export const filteredContacts = createAction(\"contactList/filteredCont\");\r\n\r\nexport const addContact = (contact) => {\r\n    return {\r\n        type: \"contact/add\",\r\n        payload: contact,\r\n    }  \r\n};\r\nexport const deleteContact = (id) => {\r\n    return {\r\n        type: \"contact/delete\",\r\n        payload: {id},\r\n    }\r\n};\r\n\r\nexport const filterContact = (value) => {\r\n    return {\r\n        type: \"contactList/filter\",\r\n        payload: value,\r\n    }\r\n};\r\nexport const filteredContacts = (arrCont) => {\r\n    return {\r\n        type: \"contactList/filteredCont\",\r\n        payload: arrCont,\r\n    }\r\n};\r\n","import { useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport styles from \"./form.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/contacts/actions\";\r\n\r\nconst Form = ({ contactList, onAdd }) => {\r\n  const nameInputId = uuid();\r\n  const numberInputId = uuid();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChangeName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleChangeNumber = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newContact = {\r\n      id: uuid(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    const renderedNames = contactList.find(\r\n      (contact) => contact.name.toLowerCase() === newContact.name.toLowerCase()\r\n    );\r\n    if (renderedNames) {\r\n      alert(`${newContact.name} is already on contacts`);\r\n      setName(\"\");\r\n      setNumber(\"\");\r\n      return;\r\n    }\r\n    onAdd(newContact);\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <label className={styles.label} htmlFor={nameInputId}>\r\n        Name\r\n      </label>\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        id={nameInputId}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"\"\r\n        required\r\n        onChange={handleChangeName}\r\n      />\r\n      <label className={styles.label} htmlFor={numberInputId}>\r\n        Number\r\n      </label>\r\n      <input\r\n        className={styles.input}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        value={number}\r\n        id={numberInputId}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"\"\r\n        required\r\n        onChange={handleChangeNumber}\r\n      />\r\n      <button className={styles.submitBtn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contactList: state.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAdd: (contact) => dispatch(addContact(contact)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React from \"react\";\r\nimport styles from \"./contactItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/contacts/actions\";\r\nimport {filteredContacts} from \"../../redux/contacts/actions\"\r\n\r\nconst ContactItem = ({ contactList, onDel, filter, filteredCont }) => {\r\n\r\n  if (filter === \"\") {\r\n    return  contactList.map(contact => {\r\n      const { id, name, number } = contact;\r\n      return (\r\n        <li className={styles.contactItem} key={id}>\r\n          <span id=\"name\" className={styles.name}>\r\n            {name}:\r\n          </span>\r\n          <span className={styles.number}>{number}</span>\r\n          <button className={styles.btn} onClick={() => onDel(id)}>\r\n            ❌\r\n          </button>\r\n        </li>\r\n      );\r\n    });    \r\n  }\r\n  return filteredCont.map(contact => {\r\n    const { id, name, number } = contact;\r\n    return (\r\n      <li className={styles.contactItem} key={id}>\r\n        <span id=\"name\" className={styles.name}>\r\n          {name}:\r\n        </span>\r\n        <span className={styles.number}>{number}</span>\r\n        <button className={styles.btn} onClick={() => onDel(id)}>\r\n          ❌\r\n        </button>\r\n      </li>\r\n    );\r\n  })\r\n};\r\n\r\nContactItem.propType = {\r\n  contacts: PropTypes.obj,\r\n  clickOnBtn: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contactList: state.contacts,\r\n    filter: state.filter,\r\n    filteredCont: state.filteredCont,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onDel: (contact) => dispatch(deleteContact(contact)),\r\n    onFilteredCont: (arrCont) => dispatch(filteredContacts(arrCont))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);\r\n","import ContactItem from \"../ContactItem/ContactItem\";\r\nimport styles from \"./contactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = () => { \r\n  return (\r\n    <ul className={styles.list}>\r\n      <ContactItem />\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.prototype = {\r\n  contacts: PropTypes.obj,\r\n  clickOnBtn: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import styles from './filter.module.css';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterContact } from \"../../redux/contacts/actions\"\r\nimport {filteredContacts} from \"../../redux/contacts/actions\"\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst Filter = ({ onFilter, onFilteredCont, filter, contactList }) => {\r\n   \r\n  useEffect(() => {\r\n     if (filter.length > 0) {\r\n      onFilteredCont(contactList.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase())))  \r\n    }\r\n  }, [filter,contactList, onFilteredCont])\r\n  \r\n  return (\r\n    <>\r\n         <label className = {styles.label}>Find contacts by name</label>\r\n         <input className={styles.input}  onChange={(e) =>onFilter(e.currentTarget.value)} />\r\n       </>\r\n  )\r\n};\r\nFilter.propType = {\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filter: state.filter,\r\n    contactList: state.contacts,\r\n  }\r\n}\r\nconst mapDispatchToProp = dispatch => {\r\n  return {\r\n    onFilter: (value) => dispatch(filterContact(value)),\r\n    onFilteredCont: (arr) => dispatch(filteredContacts(arr))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProp)(Filter);\r\n","import \"./App.css\";\nimport Form from \"../Form/Form\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\nimport { connect } from \"react-redux\";\n\nconst App = ({contactList}) => {\n    return (\n      <div className=\"phonebook\">\n        <h2 className=\"title\">Phonebook</h2>\n        <Form/>\n        <h2 className=\"title\">Contacts</h2>\n        <Filter />\n        {contactList.length > 0\n          ? (<ContactList />)\n          : (<p className=\"notification\">Please add your contacts.</p>)}\n       \n     \n      </div>\n    );\n  };\n  \nconst mapToStateProps = state => {\n  return {    \n    contactList: state.contacts,\n  }\n}\nexport default connect(mapToStateProps)(App);\n","// import { createReducer } from '@reduxjs/toolkit';\r\n// import { combineReducers } from \"redux\";\r\n\r\n// import { addContact, deleteContact, filterContact, filteredContacts } from \"./actions\";\r\nimport { combineReducers } from \"redux\";  //Redux\r\nconst initialState = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\n// export const contactsListReducer = createReducer(initialState, {\r\n//   [addContact]: (state, action) => [...state, action.payload],\r\n//   [deleteContact]: (state, action) => state.filter((contact) => contact.id !== action.payload.id),\r\n// });\r\n\r\n// export const filterReducer = createReducer('', {\r\n//   [filterContact]: (_, { payload }) => payload,\r\n// });\r\n// export const visibleCont = createReducer([], {\r\n//   [filteredContacts]: (_, action) => [...action.payload],\r\n// });\r\n// export default combineReducers({\r\n//   contactsListReducer,  \r\n//     filterReducer,\r\n//     visibleCont,\r\n  \r\n// });\r\n\r\n////////////////////////////Redux\r\nexport const contactsListReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"contact/add\":\r\n      return [...state, action.payload];\r\n    case \"contact/delete\":\r\n      return state.filter((contact) => contact.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const filterReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"contactList/filter\":\r\n      return action.payload;   \r\n    default:      \r\n  return state;\r\n  }\r\n    \r\n}\r\nexport const visibleCont = (state = [], action) => {\r\n    switch (action.type) {   \r\n    case \"contactList/filteredCont\":\r\n      return [...action.payload];\r\n    default:      \r\n  return state;\r\n  }\r\n}\r\nexport const rootReducer = combineReducers({\r\n  contacts: contactsListReducer,\r\n  filter: filterReducer,\r\n  filteredCont: visibleCont,\r\n});","// import { configureStore } from \"@reduxjs/toolkit\";\r\n// import { combineReducers } from \"redux\";\r\n// import { contactsListReducer, filterReducer, visibleCont } from \"./contacts/reducers\";\r\n\r\n// import storage from \"redux-persist/lib/storage\";\r\n// import {\r\n//   persistStore,\r\n//   persistReducer,\r\n//   FLUSH,\r\n//   REHYDRATE,\r\n//   PAUSE,\r\n//   PERSIST,\r\n//   PURGE,\r\n//   REGISTER,\r\n// } from \"redux-persist\";\r\n\r\n\r\n\r\n// const persistConfig = {\r\n//   key: \"contacts\",\r\n//   version: 1,\r\n//   storage,\r\n//   blacklist: [\"filter\", \"filteredCont\"],\r\n// };\r\n// export const rootReducer = combineReducers({\r\n//   contacts: contactsListReducer,\r\n//   filter: filterReducer,\r\n//   filteredCont: visibleCont,\r\n// });\r\n// const persistedContactsReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n// export const store = configureStore({\r\n//   reducer: persistedContactsReducer,\r\n//   middleware: (getDefaultMiddleware) =>\r\n//     getDefaultMiddleware({\r\n//       serializableCheck: {\r\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//       },\r\n//     }),\r\n// });\r\n\r\n// export const persistor = persistStore(store);\r\n\r\n//////////////////Redux\r\n\r\nimport { createStore } from \"redux\";\r\nimport { rootReducer } from \"./contacts/reducers\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\nexport default store;\r\n/////////////////\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\"   ///Redux\n// import { PersistGate } from \"redux-persist/integration/react\"; \n// import { store, persistor } from \"./redux/store\";  ///reduxToolkit\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <PersistGate loading={null} persistor={persistor}>   */}\n      <Provider store={store}>\n        <App />\n      </Provider>\n    {/* </PersistGate> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"contactItem_contactItem__1K3E-\",\"name\":\"contactItem_name__tEXSP\",\"number\":\"contactItem_number__19RhP\",\"btn\":\"contactItem_btn__1odCe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"form_label__1FrRI\",\"input\":\"form_input__1I0dx\",\"form\":\"form_form__2fzAu\",\"submitBtn\":\"form_submitBtn__3UmYP\"};"],"sourceRoot":""}